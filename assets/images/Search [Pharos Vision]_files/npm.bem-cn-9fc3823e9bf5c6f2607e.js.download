(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{635:function(t,n,e){t.exports=function(){"use strict";var t={ns:"",el:"__",mod:"_"};function extend(t,n){return Object.keys(n).reduce((function(t,e){var r=n[e];return Array.isArray(r)&&(r=r.slice()),t[e]=r,t}),t)}function copy(t){return extend({},t)}function objectToArray(n,e){return void 0===e&&(e=t.mod),Object.keys(n).reduce((function(t,r){var o=n[r];return o?(!0===o?t.push(e+r):t.push(e+r+e+o),t):t}),[])}function callableInstance(){var n=Array.prototype.slice.call(arguments),e=copy(this);return factory(e=n.reduce((function(n,e){return e&&"string"==typeof e&&(n.name=n.name+t.el+e),e&&"object"==typeof e&&n.mods.push(e),n}),e))}function toString(){var n=t.ns+this.name,e=n;e=this.mods.reduce((function(t,e){var r=objectToArray(e);return r.length&&(r.unshift(""),t+=r.join(" "+n)),t}),e),this.mixes.length&&(e+=" "+this.mixes.join(" "));var r=this.states;return e=Object.keys(r).reduce((function(t,n){return t+(r[n]?" is-"+n:"")}),e)}function split(){var t=toString.bind(this)();return String.prototype.split.apply(t,arguments)}function mix(t){var n,e=copy(this);return t&&(n="function"==typeof t?[t.toString()]:"string"==typeof t?[t]:Array.isArray(t)?t:objectToArray(t,""),e.mixes=e.mixes.concat(n)),factory(e)}function state(t){var n=copy(this),e=copy(n.states);return extend(e,t||{}),n.states=e,factory(n)}function factory(t){t=extend({name:"",mods:[],mixes:[],states:{}},t||{});var n=callableInstance.bind(t);return n.toString=toString.bind(t),n.split=split.bind(t),n.mix=mix.bind(t),n.state=state.bind(t),n}function block(t){return factory({name:t})}return block.setup=function(n){return extend(t,n||{}),block},block}()}}]);
//# sourceMappingURL=npm.bem-cn-9fc3823e9bf5c6f2607e.js.map